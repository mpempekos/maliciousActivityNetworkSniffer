package server;

import java.sql.Timestamp;
import java.util.Date;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.Style;
import nodes.NodeIdentifier;
import nodes.OnlineNodesMemory;
import db.DBConnector;
import dbObjects.StatisticsEntry;
import exchangeableObjects.MaliciousPatterns;
import exchangeableObjects.StatisticalReports;
import gui.ActionPanel;
import gui.ReportTerminalOperations;
import gui.StatisticsPanel;

@WebService(endpointInterface="server.AdderWebServices")
@SOAPBinding(style=Style.DOCUMENT)
public class AdderWebServicesImpl implements AdderWebServices {

	@Override
	@WebMethod
	public boolean register(String nodeID) 
	{
		Date currentDate = new Date();
		Timestamp timestamp = new Timestamp(currentDate.getTime());
		NodeIdentifier ui = new NodeIdentifier(nodeID,timestamp);
		DBConnector.clientDbRegistration(ui);
		/*CODE FOR GUI*/
		/* setText() supposed to be thread safe (oracle documentation)*/
		gui.ReportTerminalOperations.addReport("> Node " + nodeID + " just registered !");    	
		String newReport = new String(StatisticsPanel.textArea.getText() + ReportTerminalOperations.getReport());
		StatisticsPanel.textArea.setText(newReport);
		ActionPanel.textArea.setText(newReport);
		
		return OnlineNodesMemory.addNode(ui);
	}
	@Override
	@WebMethod
	@WebResult(name="MaliciousPatterns")
	public MaliciousPatterns maliciousPatternsRequest(String nodeID) 
	{
		/*
		/*CODE FOR GUI*/
		/* setText() supposed to be thread safe (oracle documentation)
		gui.ReportTerminalOperations.addReport(">Node " + nodeID + " requested Malicious Patterns");    	
		String newReport = new String(StatisticsPanel.textArea.getText() + ReportTerminalOperations.getReport());
		StatisticsPanel.textArea.setText(newReport);
		ActionPanel.textArea.setText(newReport);
		*/
		MaliciousPatterns maliciousPatterns = OnlineNodesMemory.requestMaliciousPatterns(nodeID);
		return maliciousPatterns;
	}
	@Override
	@WebMethod
	public void maliciousPatternsStatisticalReports(String nodeID,StatisticalReports statisticalReport) 
	{	
		/*
		/*CODE FOR GUI*/
		/* setText() supposed to be thread safe (oracle documentation)
		gui.ReportTerminalOperations.addReport(">Node " + nodeID + " sent a Statistical Report ");    	
		String newReport = new String(StatisticsPanel.textArea.getText() + ReportTerminalOperations.getReport());
		StatisticsPanel.textArea.setText(newReport);
		ActionPanel.textArea.setText(newReport);
		*/
	
		if(!statisticalReport.isEmptyOrZero()) 
		 	OnlineNodesMemory.setNodeValidRequestTime(nodeID);
		
		List<StatisticsEntry> statistics = statisticalReport.getStatisticalReportEntries();
		for(StatisticsEntry crawl : statistics) {
			DBConnector.updateStatistics(crawl,nodeID);
		}
	}
	@Override
	@WebMethod
	public boolean unregister(String nodeID) 
	{
		/*CODE FOR GUI*/
		/* setText() supposed to be thread safe (oracle documentation)*/
		gui.ReportTerminalOperations.addReport("> Node " + nodeID + " just unregistered !");    	
		String newReport = new String(StatisticsPanel.textArea.getText() + ReportTerminalOperations.getReport());
		StatisticsPanel.textArea.setText(newReport);
		ActionPanel.textArea.setText(newReport);
		
		return OnlineNodesMemory.removeNode(nodeID);
	}
	/*******************************************************/
	/*Following services concern Android smartphone/tablet */
	/*******************************************************/
	/*
		NO OVERLOADING ALLOWED ON WEBSERVICES ! ! (register()) 
	@Override
	public boolean register(String username, String password,AvailableNodes nodes) 
	{
		// TODO Auto-generated method stub
		System.out.println("You have been registered");
		return true;
	}
	@Override
	public List<StatisticalReports> retrieveStatistics(String username,String password) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public String retrieveMaliciousPatterns(String username, String password) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public void insertMaliciousPatterns(String username, String password,String maliciousIP, String stringPatterns) {
		// TODO Auto-generated method stub
		
	}
	*/
}
